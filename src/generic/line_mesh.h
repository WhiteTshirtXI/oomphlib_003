// Common base class for all LineMeshes

#ifndef OOMPH_LINEMESH_HEADER
#define OOMPH_LINEMESH_HEADER

// Config header generated by autoconfig
#ifdef HAVE_CONFIG_H
  #include <oomph-lib-config.h>
#endif


#ifdef OOMPH_HAS_MPI
//mpi headers
#include "mpi.h"
#endif

// oomph-lib includes
#include "Vector.h"
#include "nodes.h"
#include "matrices.h"
#include "mesh.h"

namespace oomph
{
 
 //======================================================================
 /// Base class for line meshes (meshes made of 1D line elements)
 //======================================================================
 class LineMeshBase : public virtual Mesh
  {
   
   public:
   
   /// Constructor (empty)
   LineMeshBase() {}
   
   /// Broken copy constructor
   LineMeshBase(const LineMeshBase& node) 
    { 
     BrokenCopy::broken_copy("LineMeshBase");
    } 
   
   /// Broken assignment operator
   void operator=(const LineMeshBase&) 
    {
     BrokenCopy::broken_assign("LineMeshBase");
    }
   
   /// Destructor (empty)
   virtual ~LineMeshBase() {}
   
   /// Set up lookup schemes which establish which elements are located
   /// next to mesh's boundaries (wrapper to suppress doc)
   void setup_boundary_element_info()
    {
     std::ofstream outfile;
     setup_boundary_element_info(outfile);
    }
   
   /// \short Set up lookup schemes which establish which elements are
   /// located next to mesh's boundaries. Doc in outfile (if it's open).
   void setup_boundary_element_info(std::ostream &outfile);
   
  };
 
} // End of namespace

#endif

